export const mapLangIdentifierToLanguage = (langIdentifier: string): string => {
  switch (langIdentifier) {
    case 'javascript':
      return 'JavaScript';
    case 'typescript':
      return 'TypeScript';
    case 'python':
      return 'Python';
    case 'java':
      return 'Java';
    case 'csharp':
      return 'C#';
    case 'php':
      return 'PHP';
    case 'ruby':
      return 'Ruby';
    case 'go':
      return 'Go';
    case 'swift':
      return 'Swift';
    case 'kotlin':
      return 'Kotlin';
    case 'html':
      return 'HTML';
    case 'css':
      return 'CSS';
    case 'bash':
      return 'Bash';
    case 'sql':
      return 'SQL';
    case 'json':
      return 'JSON';
    case 'xml':
      return 'XML';
    case 'yaml':
      return 'YAML';
    case 'markdown':
      return 'Markdown';
    case 'plaintext':
      return 'Plain Text';
    case 'shell':
      return 'Shell';
    case 'powershell':
      return 'PowerShell';
    case 'dockerfile':
      return 'Dockerfile';
    case 'graphql':
      return 'GraphQL';
    case 'typescriptreact':
      return 'TypeScript React';
    case 'javascriptreact':
      return 'JavaScript React';
    case 'scss':
      return 'SCSS';
    case 'less':
      return 'LESS';
    case 'sass':
      return 'Sass';
    case 'vue':
      return 'Vue';
    case 'json5':
      return 'JSON5';
    case 'ini':
      return 'INI';
    case 'properties':
      return 'Properties';
    case 'toml':
      return 'TOML';
    case 'csv':
      return 'CSV';
    case 'latex':
      return 'LaTeX';
    case 'haskell':
      return 'Haskell';
    case 'rust':
      return 'Rust';
    case 'elixir':
      return 'Elixir';
    case 'erlang':
      return 'Erlang';
    case 'clojure':
      return 'Clojure';
    case 'scala':
      return 'Scala';
    case 'dart':
      return 'Dart';
    case 'objectivec':
      return 'Objective-C';
    case 'actionscript':
      return 'ActionScript';
    case 'asm':
      return 'Assembly';
    case 'coffeescript':
      return 'CoffeeScript';
    case 'groovy':
      return 'Groovy';
    case 'julia':
      return 'Julia';
    case 'matlab':
      return 'MATLAB';
    case 'pascal':
      return 'Pascal';
    case 'prolog':
      return 'Prolog';
    case 'r':
      return 'R';
    case 'scheme':
      return 'Scheme';
    case 'smalltalk':
      return 'Smalltalk';
    case 'vhdl':
      return 'VHDL';
    case 'verilog':
      return 'Verilog';
    case 'fortran':
      return 'Fortran';
    case 'ada':
      return 'Ada';
    case 'lisp':
      return 'Lisp';
    case 'solidity':
      return 'Solidity';
    case 'assembly':
      return 'Assembly Language';
    case 'fsharp':
      return 'F#';
    case 'nim':
      return 'Nim';
    case 'crystal':
      return 'Crystal';
    case 'd':
      return 'D';
    case 'elisp':
      return 'Emacs Lisp';
    case 'ocaml':
      return 'OCaml';
    default:
      return langIdentifier;
  }
};
